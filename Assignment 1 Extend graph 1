#Graph of number of bracelets where mod=digitsincluded
import numpy as np
import matplotlib.pyplot as plt

plt.figure(figsize=(16,10))
for digitsincluded in range(2, 60):
    mod = digitsincluded
    NumBracelets = 1
    bracelet = np.array([0, 0])
    previous = "true"
    #Cycle through all starting points
    for x in range(0, digitsincluded):
        for y in range(0, digitsincluded):
            #Look through previous bracelets to see if x,y is already in a bracelet
            for n in range(0, len(bracelet)-1):
                if x==bracelet[n] and y==bracelet[n+1]:
                    previous = "true"
            #If not already been seen it must belong to a new bracelet
            if previous != "true":
                NumBracelets = NumBracelets + 1
                x1 = x
                x2 = y
                bracelet = np.append(bracelet, x1)
                bracelet = np.append(bracelet, x2)
                for n in range(0,digitsincluded*digitsincluded):
                    new = (x1+x2)%mod
                    if (x2!=x or new != y) and previous!="true": 
                        bracelet = np.append(bracelet, new)
                        x1 = x2
                        x2 = new
                    else:
                        previous = "true"
            previous = "false"
            bracelet = np.append(bracelet, digitsincluded+100)       
    plt.plot(digitsincluded, NumBracelets, '-bo')
    plt.xlabel("Number of numbers that can be chosen for the start of the bracelet")
    plt.ylabel("Number of bracelets")
    
plt.grid()
plt.show()
