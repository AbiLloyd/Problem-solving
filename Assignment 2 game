## Play game with computer playing player 0's strategy (extend)
import numpy as np
import matplotlib.pyplot as plt
import scipy.linalg as LA
rng = np.random.default_rng()
import random as r

# nxn matrix size
n = int(input("For n>3, what size nxn grid would you like to play in? n = "))
first = input("Would you like to go first? (Y/N): ")
if first == "Y":
    first = True
    problem = True
else:
    first = False
    problem = False
A = rng.integers(8,9, (n,n))
count = 0
pairs = []
finished = False
if n<4:
    finished = True
while finished == False:
    print(A)
    while problem == True:
        if (first == True and count == 0) or count > 0:
            row = int(input("What row would you like to play in? "))-1
            column = int(input("What column would you like to play in?"))-1
            if 0 <= row < n and 0 <= column < n:
                if A[row, column] != 0 and A[row, column] != 1:
                    A[row, column] = 1
                    pairs = np.append(pairs, row)
                    pairs = np.append(pairs, column)
                    pairs = np.append(pairs, 100)
                    pairs = np.append(pairs, 100)
                    count = count +1
                    problem = False
    problem = True

    #Follow strategy for zero
    if first == False and count == 0:
        A[0,0] = 0
        pairs = np.append(pairs, 0)
        pairs = np.append(pairs, 0)
        count = count +1
        pairs = np.append(pairs, 100)
        pairs = np.append(pairs, 100)
    else:
        if n%2==1 and column == 0:
            random = False
            for x in range(0, n):
                if A[x,0] == 8 and random == False:
                    A[x,0] = 0
                    pairs = np.append(pairs, x)
                    pairs = np.append(pairs, 0)
                    count = count +1
                    pairs = np.append(pairs, 100)
                    pairs = np.append(pairs, 100)
                    random = True
            if random == False:
                found = False
                for x in range(0, n):
                    for y in range(1,n):
                        if y%2==0 and found != True:
                            if A[x,y] ==8 and A[x,y-1]==8:
                                A[x,y] = 0
                                pairs = np.append(pairs, x)
                                pairs = np.append(pairs, y)
                                count = count +1
                                pairs = np.append(pairs, 100)
                                pairs = np.append(pairs, 100)
                                found = True
                                print("Case 2")
                        if y%2==1 and found!=True:
                            if A[x,y] ==8 and A[x,y+1]==8:
                                A[x,y] = 0
                                pairs = np.append(pairs, x)
                                pairs = np.append(pairs, y)
                                count = count +1
                                pairs = np.append(pairs, 100)
                                pairs = np.append(pairs, 100)
                                found = True
        if (n%2==1 and column%2 == 0 and column != 0) or (n%2== 0 and column%2 == 1):
            nowcolumn = column -1
            if A[row, nowcolumn] == 8:
                A[row, nowcolumn] = 0
                pairs = np.append(pairs, row)
                pairs = np.append(pairs, nowcolumn)
                count = count +1
                pairs = np.append(pairs, 100)
                pairs = np.append(pairs, 100)
            else:
                random = False
                for x in range(0, n):
                    for y in range(0, n):
                        if A[y,x] == 8 and random == False:
                            A[y,x] = 0
                            pairs = np.append(pairs, y)
                            pairs = np.append(pairs, x)
                            count = count +1
                            pairs = np.append(pairs, 100)
                            pairs = np.append(pairs, 100)
                            random = True
        if (n%2==1 and column%2 == 1) or (n%2== 0 and column%2 == 0):
            nowcolumn = column +1
            if A[row, nowcolumn] == 8:
                A[row, nowcolumn] = 0
                pairs = np.append(pairs, row)
                pairs = np.append(pairs, nowcolumn)
                count = count +1
                pairs = np.append(pairs, 100)
                pairs = np.append(pairs, 100)
            else:
                random = False
                for x in range(0, n):
                    for y in range(0, n):
                        if A[y,x] == 8 and random == False:
                            A[y,x] = 0
                            pairs = np.append(pairs, y)
                            pairs = np.append(pairs, x)
                            count = count +1
                            pairs = np.append(pairs, 100)
                            pairs = np.append(pairs, 100)
                            random = True
    finished = True
    for x in range(0, n):
        for y in range(0, n):
            if A[x,y] == 8:
                finished = False
print("The determinant is ", LA.det(A))
