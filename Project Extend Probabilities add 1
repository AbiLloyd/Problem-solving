#Extend
#Only add one particle of the third type after a collision
#Input starting position
import numpy as np
import matplotlib.pyplot as plt
import random

reps = 10000
countA = 0
countB = 0
countC = 0
countNA = 0

inia = int(input("How many of type A? "))
inib = int(input("How many of type B? "))
inic = int(input("How many of type C? "))
for z in range(1, reps):
    a = inia
    b = inib
    c = inic
    types = []
    finish = False
    loops = 0
    if a>0:
        for x in range(0, a):
            types = np.append(types, "A")
    if b>0:
        for x in range(0, b):
            types = np.append(types, "B")
    if c>0:
        for x in range(0, c):
            types = np.append(types, "C")
        
    nocollision = False
    while finish == False:
        loops = loops + 1
        choice1 = np.random.choice(types, 1)
        if choice1 == "A":
            a = a-1
            types = []
            if a>=1:
                for x in range(0, a):
                    types = np.append(types, "A")
            if b>=1:
                for x in range(0, b):
                    types = np.append(types, "B")
            if c>=1:
                for x in range(0, c):
                    types = np.append(types, "C")
                    
            choice2 = np.random.choice(types, 1)
            if choice2 == "A":
                a = a+1
            if choice2 == "B":
                b = b-1
                c = c+1
            if choice2 == "C":
                b = b+1
                c = c-1
        if choice1 == "B":
            b = b-1
            types = []
            if a>=1:
                for x in range(0, a):
                    types = np.append(types, "A")
            if b>=1:
                for x in range(0, b):
                    types = np.append(types, "B")
            if c>=1:
                for x in range(0, c):
                    types = np.append(types, "C")
                    
            choice2 = np.random.choice(types, 1)
            if choice2 == "A":
                a = a-1
                c = c+1
            if choice2 == "B":
                b = b+1
            if choice2 == "C":
                a = a+1
                c = c-1
        if choice1 == "C":
            c = c-1
            types = []
            if a>=1:
                for x in range(0, a):
                    types = np.append(types, "A")
            if b>=1:
                for x in range(0, b):
                    types = np.append(types, "B")
            if c>=1:
                for x in range(0, c):
                    types = np.append(types, "C")
                    
            choice2 = np.random.choice(types, 1)
            if choice2 == "A":
                a = a-1
                b = b+1
            if choice2 == "B":
                a = a+1
                b = b-1
            if choice2 == "C":
                c = c+1

        if (a==0 and b==0) or (a==0 and c==0) or (b==0 and c==0):
            finish = True
        types = []
        if a>0:
            for x in range(0, a):
                types = np.append(types, "A")
        if b>0:
            for x in range(0, b):
                types = np.append(types, "B")
        if c>0:
            for x in range(0, c):
                types = np.append(types, "C")
        if loops >1000:
            finish = True
            nocollision = True
          
    if nocollision == False:
        if types[0]=="A":
            countA = countA+1
        if types[0] == "B":
            countB = countB +1
        if types[0] == "C":
            countC = countC +1
    if nocollision == True:
        countNA = countNA +1
            
print("Probability of type A being left is ", countA/reps)
print("Probability of type B being left is ", countB/reps)
print("Probability of type C being left is ", countC/reps)
print("Probability of the process not ending is ", countNA/reps)
